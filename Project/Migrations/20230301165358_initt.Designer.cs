// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230301165358_initt")]
    partial class initt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("exist")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("Project.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("exist")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            Name = "Taba medical",
                            Phone = "01068100402",
                            exist = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Assiut",
                            Name = "Farco",
                            Phone = "01007837834",
                            exist = 1
                        },
                        new
                        {
                            Id = 3,
                            Address = "Sohag",
                            Name = "Amanco",
                            Phone = "01109283484",
                            exist = 1
                        },
                        new
                        {
                            Id = 4,
                            Address = "Matroh",
                            Name = "Pharma",
                            Phone = "01113468920",
                            exist = 1
                        },
                        new
                        {
                            Id = 5,
                            Address = "Cairo",
                            Name = "Sanofi",
                            Phone = "01064892436",
                            exist = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Cairo",
                            Name = "Gsk",
                            Phone = "01173630273",
                            exist = 1
                        });
                });

            modelBuilder.Entity("Project.EmployeeClass", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("exist")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salary")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Age = 23,
                            Email = "Mayar@admin",
                            exist = 1,
                            name = "Mayar",
                            password = "0123",
                            phone = "0100000",
                            salary = 1000
                        },
                        new
                        {
                            id = 2,
                            Age = 25,
                            Email = "Mariem@Employee",
                            exist = 1,
                            name = "Mariem",
                            password = "1234",
                            phone = "0100000",
                            salary = 2000
                        },
                        new
                        {
                            id = 3,
                            Age = 24,
                            Email = "hadeer@Employee",
                            exist = 1,
                            name = "hadeer",
                            password = "12345",
                            phone = "0100000",
                            salary = 3000
                        },
                        new
                        {
                            id = 4,
                            Age = 26,
                            Email = "Reem@admin",
                            exist = 1,
                            name = "Reem",
                            password = "1679",
                            phone = "01010101",
                            salary = 1000
                        });
                });

            modelBuilder.Entity("Project.MedBills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedId")
                        .HasColumnType("int");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalProfit")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("exist")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("MedId");

                    b.ToTable("MedBills");
                });

            modelBuilder.Entity("Project.Medicine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompID")
                        .HasColumnType("int");

                    b.Property<double>("CompanyPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Profit")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("exist")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CompID");

                    b.ToTable("Medicine");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompID = 6,
                            CompanyPrice = 40.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2028, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "rapiflam",
                            ProductionDate = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 10.0,
                            Type = "Tablet",
                            UnitPrice = 50.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 2,
                            CompID = 4,
                            CompanyPrice = 15.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2024, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "cataflam",
                            ProductionDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 5.0,
                            Type = "Tablet",
                            UnitPrice = 20.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 3,
                            CompID = 3,
                            CompanyPrice = 80.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2022, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "buscoban",
                            ProductionDate = new DateTime(2021, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 20.0,
                            Type = "Tablet",
                            UnitPrice = 100.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 4,
                            CompID = 2,
                            CompanyPrice = 8.9499999999999993,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2026, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "vegaskiin",
                            ProductionDate = new DateTime(2022, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 2.0,
                            Type = "injection",
                            UnitPrice = 10.949999999999999,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 5,
                            CompID = 1,
                            CompanyPrice = 120.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "meranda",
                            ProductionDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 30.0,
                            Type = "injection",
                            UnitPrice = 150.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 6,
                            CompID = 1,
                            CompanyPrice = 65.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2025, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "teraicten",
                            ProductionDate = new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 15.0,
                            Type = "Syrup",
                            UnitPrice = 80.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 7,
                            CompID = 2,
                            CompanyPrice = 36.5,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2025, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "servetam",
                            ProductionDate = new DateTime(2021, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 3.0,
                            Type = "Tablet",
                            UnitPrice = 39.5,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 8,
                            CompID = 5,
                            CompanyPrice = 85.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2026, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "banadol",
                            ProductionDate = new DateTime(2022, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 15.0,
                            Type = "Tablet",
                            UnitPrice = 100.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 9,
                            CompID = 3,
                            CompanyPrice = 85.0,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2025, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "depakin",
                            ProductionDate = new DateTime(2021, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 15.0,
                            Type = "Syrup",
                            UnitPrice = 100.0,
                            exist = 1,
                            quantity = 10
                        },
                        new
                        {
                            ID = 10,
                            CompID = 3,
                            CompanyPrice = 8.5,
                            EnteredDate = new DateTime(2020, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExpDate = new DateTime(2023, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "profien",
                            ProductionDate = new DateTime(2022, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Profit = 1.5,
                            Type = "Syrup",
                            UnitPrice = 10.0,
                            exist = 1,
                            quantity = 10
                        });
                });

            modelBuilder.Entity("Project.Bill", b =>
                {
                    b.HasOne("Project.EmployeeClass", "Employee")
                        .WithMany("Bill")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Project.MedBills", b =>
                {
                    b.HasOne("Project.Bill", "Bill")
                        .WithMany("MedBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Medicine", "Medicine")
                        .WithMany("MedBills")
                        .HasForeignKey("MedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("Project.Medicine", b =>
                {
                    b.HasOne("Project.Company", "company")
                        .WithMany("medicines")
                        .HasForeignKey("CompID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("Project.Bill", b =>
                {
                    b.Navigation("MedBills");
                });

            modelBuilder.Entity("Project.Company", b =>
                {
                    b.Navigation("medicines");
                });

            modelBuilder.Entity("Project.EmployeeClass", b =>
                {
                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Project.Medicine", b =>
                {
                    b.Navigation("MedBills");
                });
#pragma warning restore 612, 618
        }
    }
}
